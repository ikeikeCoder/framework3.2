<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.fervorseed</groupId>	<!-- groupId : 프로젝트 그룹 식별값 (ex : 도메인.회사명) -->
  <artifactId>framework</artifactId>	<!-- artifactId : 프로젝트 식별값 (ex : 어플리케이션명) -->
  <version>0.0.1-SNAPSHOT</version>	<!-- version : 버전 의미 (기본 0.0.1-SNAPSHOT) -->
  <packaging>war</packaging>	<!-- 패키징 타입을 의미. 프로젝트 결과물의 패키징 상태 값 (war, jar, ear 등의 존재) -->
  
  <!-- 오라클 ojdbc14를 위한 추가 -->
  <repositories>
      <repository>
          <id>mesir-repo</id>
          <url>http://mesir.googlecode.com/svn/trunk/mavenrepo</url>
      </repository>
  </repositories>
  
  <profiles>
        <!-- local server -->
        <profile>
            <id>development</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation> 
            <properties>
                <environments>development</environments>
            </properties>
        </profile>
        <!-- test server -->
        <profile>
            <id>test</id>
            <properties>
                <environments>test</environments>
            </properties>
        </profile>
        <!-- real server -->
        <profile>
            <id>production</id>
            <properties>
                <environments>production</environments>
            </properties>
        </profile>
    </profiles>
  
  	<!-- properties : 속성값으로 사용할 하위 태그들을 기술 -->
    <properties> 

		<!-- Generic properties -->
		<java.version>1.7</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		<!-- Web -->
		<jsp.version>2.2</jsp.version>
		<jstl.version>1.2</jstl.version>
		<servlet.version>3.1.0</servlet.version>

		<!-- Spring -->
		<spring-framework.version>3.2.5.RELEASE</spring-framework.version>
		
		<!-- aspectj -->
		<version.aspect>1.7.2</version.aspect>

		<!-- Logging -->
		<logback.version>1.0.13</logback.version>
		<slf4j.version>1.7.5</slf4j.version>

		<!-- Test -->
		<junit.version>4.11</junit.version>
		
		<!-- MyBatis -->
		<version.mybatis>3.2.8</version.mybatis>
		<version.mybatis.spring>1.2.2</version.mybatis.spring>
		
		<!-- JDBC Drivers -->
		<mysql.version>5.1.34</mysql.version>
		<oracle.version>10.2.0.4.0</oracle.version>
		
		<!-- Jackson -->
		<version.Jackson>2.3.5</version.Jackson>
		
		<!-- siteMesh -->
		<version.Sitemesh>3.0.0</version.Sitemesh>
	</properties>
	
	<!-- 프로젝트에서 의존하는 다른 프로젝트 정보를 기술 (다른 필요한 라이브러리 정보 입력) (POM 정보를 기술해야함) -->
	<dependencies>
	
		<!-- Spring MVC -->
		<!-- 
			spring-webmvc 모듈을 내려받으면 POM 파일에 명시한 의존 모듈들도 같이 다운 받는다.
			즉, spring-core나 spring-context 등 추가로 필요한 파일들이 의존 모듈로 명시되어 있다.
			의존된 모듈은 일일이 추가 안해도 된다.
			ex) spring-core.jar, spring-context.jar 등등을 같이 받아짐. 	
		 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring-framework.version}</version>
			<exclusions> <!-- 모듈의 의존하는 모듈을 제외하겠다는 태그. SLF4J를 사용하므로 JCL라이브러리가 필요 없다. -->
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- spring AOP -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${version.aspect}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>aspectjrt</artifactId>
		    <version>${version.aspect}</version>
	    </dependency>
		
		<!--  -->
		
		<!-- spring JDBC -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>${spring-framework.version}</version>
		</dependency>
		
		<!-- 스프링 OXM 사용을 위한 라이브러리 추가 (XML 객체 변환) -->
		<dependency>
		 	<groupId>org.springframework</groupId>
		 	<artifactId>spring-oxm</artifactId>
		 	<version>${spring-framework.version}</version>
		</dependency>
		
		<!-- Other Web dependencies -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
			<scope>provided</scope>
		</dependency>
	
		<!-- Spring and Transactions -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>

		<!-- Logging with SLF4J & LogBack -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		
		<!-- JDBC Drivers -->
		<dependency>
		    <groupId>com.jolbox</groupId>
		    <artifactId>bonecp-spring</artifactId>
		    <version>0.8.0.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc14</artifactId>
			<version>10.2.0.4.0</version>
		</dependency>

		<!-- MyBatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${version.mybatis}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${version.mybatis.spring}</version>
		</dependency>
		
		<!-- Jackson -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>${version.Jackson}</version>
		</dependency>
		
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>${version.Jackson}</version>
		</dependency>
		
		<!-- siteMesh -->
		<dependency>
		    <groupId>org.sitemesh</groupId>
		    <artifactId>sitemesh</artifactId>
		    <version>${version.Sitemesh}</version>
		</dependency>
		
		<!-- Test Artifacts -->
		<!-- 스프링을 손쉽게 테스트 할수 있도록 도와주는 모듈-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-framework.version}</version>
			<scope>test</scope><!-- 테스트만 사용하므로 범위는 test -->
			<exclusions> <!-- 모듈의 의존하는 모듈을 제외하겠다는 태그. SLF4J를 사용하므로 JCL라이브러리가 필요 없다. -->
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>	
	
	<!-- 컴파일러 플러그인과 리소스 플러그인 추가 -->
	<build>
		<finalName>framework</finalName>
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<argLine>
						-Xms512m -Xmx1024m -XX:MaxPermSize=128m -Dfile.encoding=UTF-8
					</argLine>
				</configuration>
			</plugin>
			
			<!-- 처음 시작시 web.xml 로드를 안함. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
		
		<resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/resources-${environments}</directory>
            </resource>
        </resources>
	</build>
</project>
